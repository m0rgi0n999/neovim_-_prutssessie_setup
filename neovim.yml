AWSTemplateFormatVersion: "2010-09-09"
Description: "Deploy 15 Ubuntu EC2 instances with 1 core, 4GB RAM in a single VPC (eu-west-1)."

Parameters:
  VpcCidr:
    Type: String
    Default: "10.0.0.0/16"
    Description: "CIDR block for VPC"

  SubnetCidr:
    Type: String
    Default: "10.0.1.0/24"
    Description: "CIDR block for Subnet"

  InstanceType:
    Type: String
    Default: "t2.micro"
    AllowedValues:
      - "t2.medium"
      - "t2.micro"
    Description: "Choose instance type (1 core with 1GB RAM closest match is t2.micro)."

  AmiId:
    Type: String
    Default: "ami-03fd334507439f4d1"
    Description: "Ubuntu AMI for eu-west-1"

  KeyName:
    Type: String
    Description: "SSH Key Pair Name (must exist in your AWS account)."

Conditions:
  CreateKeyPair: !Equals 
    - !Ref KeyName
    - ""

Resources:
  KeyPair:
    Type: AWS::EC2::KeyPair
    Condition: CreateKeyPair
    Properties:
      KeyName: !Sub ${AWS::StackName}

  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: MyVPC

  MyInternetGateway:
    Type: AWS::EC2::InternetGateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref MyInternetGateway

  MySubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: !Ref SubnetCidr
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: MySubnet

  MyRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC

  MyRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref MyRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref MyInternetGateway

  MySubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MySubnet
      RouteTableId: !Ref MyRouteTable

  MySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Allow SSH from anywhere"
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: "0.0.0.0/0"

  MyInstances:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: "MyASG"
      VPCZoneIdentifier:
        - !Ref MySubnet
      LaunchTemplate:
        LaunchTemplateId: !Ref MyLaunchTemplate
        Version: !GetAtt MyLaunchTemplate.LatestVersionNumber
      MinSize: 15
      MaxSize: 15
      DesiredCapacity: 15

  MyLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: !Ref AmiId
        InstanceType: !Ref InstanceType
        KeyName: 
          !If
            - CreateKeyPair
            - !Ref KeyPair
            - !Ref KeyName
        SecurityGroupIds:
          - !Ref MySecurityGroup
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            apt update -y
            apt install -y ansible
            echo "Ansible Installed" > /var/log/ansible_install.log
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: "UbuntuInstance"

